#!/usr/bin/env python3

from smodels.theory.theoryPrediction import theoryPredictionsFor
from smodels.theory import decomposer
from smodels.tools.theoryPredictionsCombiner import TheoryPredictionsCombiner
from smodels.theory.model import Model
from smodels.share.models.SMparticles import SMList
from smodels.share.models.mssm import BSMList
from smodels.experiment.databaseObj import Database
from smodels.tools.physicsUnits import fb, GeV
from smodels_utils.plotting import mpkitty as plt
import numpy as np

def fetch():
    dbpath = "../../smodels-database/"
    database = Database( dbpath )
    dTypes = ["efficiencyMap"]
    anaids = [ 'CMS-SUS-20-004', 'CMS-SUS-20-004-slv1' ]
    dsids = [ 'all' ]
    results = database.getExpResults(analysisIDs=anaids,
            datasetIDs=dsids, dataTypes=dTypes, useNonValidated = True )
    ret = {}
    for r in results:
        ret[r.globalInfo.id]=r
    return ret

def getTheoryPrediction( res, slhafile ):
    model = Model(BSMparticles=BSMList, SMparticles=SMList)
    model.updateParticles(inputFile=slhafile)
    sigmacut = 0.005*fb
    mingap = 5.*GeV
    smstopos = decomposer.decompose(model, sigmacut, doCompress=True,
           doInvisible=True, minmassgap=mingap )
    ts = theoryPredictionsFor(res, smstopos,
        combinedResults=True, useBestDataset=False, marginalize=False)
    return ts[0]

def computeChi2s( tp, xrange : dict  ):
    chi2s = {}
    for i in np.arange ( xrange["min"], xrange["max"], xrange["delta"] ):
        llhd = tp.likelihood ( i )
        chi2 = -2.*np.log ( llhd )
        chi2s[i]= chi2
    return chi2s

def plot ( chi2v2, chi2v1, setup ):
    plt.clf()
    slhafile = setup["slhafile"]
    xrange = setup["xrange"]
    full = setup["full"]
    slv1 = setup["SLv1"]
    slv2 = setup["SLv2"]
    chi2 = chi2v2
    minChi2 = min ( chi2.values() )
    minChi2v1 = min ( chi2v1.values() )
    values = np.array ( list ( chi2.values() ) ) - minChi2
    valuesv1 = np.array ( list ( chi2v1.values() ) ) - minChi2v1
    plt.plot ( chi2.keys(), values, c="green", label="SModelS SLv2" )
    plt.plot ( chi2v1.keys(), valuesv1, c="magenta", label="SModelS SLv1" )
    plt.plot ( full[0], full[1], c="blue", label="Bill, full" )
    plt.plot ( slv1[0], slv1[1], c="black", label="Bill, slv1" )
    plt.plot ( slv2[0], slv2[1], c="red", label="Bill, slv2" )
    plt.legend()
    ax = plt.gca()
    ax.set_ylim ( [0,10.] )
    plt.title ( rf"$\Delta\chi^2$, {slhafile}" )
    plt.ylabel ( r"$\Delta\chi^2$")
    plt.xlabel ( r"signal strength $\mu$")
    plt.kittyPlot ( f"chi2_{slhafile}.png" )

def getSetup( i=1 ):
    bills = {}
    nan = float("nan")
    fullx = list ( np.linspace(0,1,16+1) )
    bills[1] = { "slhafile": "TChiHH_300_0_300_0.slha",
              "xrange": { "min": -.3, "max": 4., "delta": .1 }, "fullx": fullx }
    bills[1]["fully"] = [0.0009691, 0.0411193, 0.1329959, 0.2649894, 0.452793, 0.6973918, 0.9997511, 1.3608103, 1.7814781, 2.2626238, 2.8050761, 3.4096148, 4.0769662, 4.8079994, 5.6025722, 6.4611683, 7.3840528]
    bills[1]["SLv1"] = [10.703636741203411, 6.54059245253103, 3.615133597119552, 1.7543169863905064, 0.6319885411842563, 0.09088039445620666, 0.026847938891251033, 0.36783419818431184, 1.061750838584544, 2.0693449200032887, 3.359953486122862, 4.90889760144654, 6.695822157259613, 8.703598155573758, 10.917571184935127, 13.325030172231891, 15.914821255975454, 18.677059361184348, 21.602910174600368, 24.684418826876282, 27.914376310242744, 31.28621152152749, 34.793905215657674, 38.43191744996574, 42.1951294374079, 46.07879367327098, 50.07849268195454, 54.190103548359275, 58.40976802057094, 62.7338662873249]
     bills[1]["SLv2"] = [nan, 3.922656349881464, 1.9939310863171613, 0.8228654118158829, 0.14345487371323884, 0.0075199452822403146, 0.2758333025637967, 0.8874869586033469, 1.7997154286360342, 2.9818189274947997, 4.411067512085509, 6.070122826111572, 7.945434023057118, 10.02623250270338, 12.303882652674503, 14.771416923479563, 17.423119105031446, 20.254062990063346, 23.259611333840013, 26.434994191878758, 29.775098393399276, 33.27448086861901, 36.927508127679204, 40.728517415323694, 44.67194459120347, 48.75240742132124, 52.96475192311584, 57.30407304882365, 61.765719678502194, 66.3452898114343]

    bills[2] = { "slhafile": "TChiHH_750_0_750_0.slha",
              "xrange": { "min": -.8, "max": 4., "delta": .1 } }
    bills[2]["SLv1"] = [3.6740493314549667, 3.3003495620199885, 3.0071787346453505, 2.680146956659314, 2.3980122381012734, 2.1274027457113505, 1.9607380050316294, 1.2529243968812693, 0.9618908025073551, 0.7828665146406308, 0.6237094311207727, 0.4839111398625562, 0.362958594317746, 0.26033536542308866, 0.17552288615570433, 0.10800225460496904, 0.05725549891508308, 0.02276737431495235, 0.004027023592556134, 0.0005294824431985035, 0.011777258538586466, 0.03728190069270454, 0.07656511063618154, 0.12916008074961383, 0.19461238127018987, 0.272480944802993, 0.36233830977815273, 0.4641402295536352, 0.5785746690100382, 0.7050367437235252, 0.8428885220737641, 0.99155924820937, 1.1505341124862696, 1.319346135998643, 1.4975692439113573, 1.6848126809073563, 1.8807163209257567, 2.0849470525998015, 2.2971953515371126, 2.517172970760896, 2.7446102663934937, 2.9792545535691204, 3.220868451685476, 3.469228153609407, 3.724122616582008, 3.9853519198365177, 4.252726995151761, 4.526068109937086]
    bills[2]["SLv2"] = [nan, nan, 0.6141081753405615, 0.5334588852087734, 0.49818052165827, 0.5061825307853667, 0.18165910415987696, 0.06620007136390882, 0.0046273374704526304, 5.8842375750600695e-05, 0.006910564078708603, 0.025060304607450234, 0.05435953944387961, 0.09463345607477436, 0.14568208145433914, 0.20728178340877434, 0.27918750208579013, 0.36113550693724505, 0.45284661902678636, 0.5540297939235472, 0.6643856002441737, 0.7836101524909793, 0.9113983685183769, 1.0474473551419692, 1.1914591401718155, 1.3431432266722538, 1.502218517389423, 1.668763052116475, 1.8434262922949358, 2.025742563971704, 2.2152410886799885, 2.4115141290772044, 2.6142064066774253, 2.8230069412734906, 3.037642209447455, 3.2578707209925994, 3.483478560536298, 3.7142758884058367, 3.950093626505293, 4.190781252356345, 4.436204416664026, 4.6862432192878885, 4.940790655822667, 5.199751327326908, 5.4630401770399715, 5.730581602676892, 6.002308227983548, 6.278160479433808]
    bills[3] = { "slhafile": "TChiHH_450_0_450_0.slha",
              "xrange": { "min": -.1, "max": 3., "delta": .1 } }
    bills[3]["SLv1"] = [10.703636741203411, 6.54059245253103, 3.615133597119552, 1.7543169863905064, 0.6319885411842563, 0.09088039445620666, 0.026847938891251033, 0.36783419818431184, 1.061750838584544, 2.0693449200032887, 3.359953486122862, 4.90889760144654, 6.695822157259613, 8.703598155573758, 10.917571184935127, 13.325030172231891, 15.914821255975454, 18.677059361184348, 21.602910174600368, 24.684418826876282, 27.914376310242744, 31.28621152152749, 34.793905215657674, 38.43191744996574, 42.1951294374079, 46.07879367327098, 50.07849268195454, 54.190103548359275, 58.40976802057094, 62.7338662873249]
    bills[3]["SLv2"] = [10.703636741203411, 6.54059245253103, 3.615133597119552, 1.7543169863905064, 0.6319885411842563, 0.09088039445620666, 0.026847938891251033, 0.36783419818431184, 1.061750838584544, 2.0693449200032887, 3.359953486122862, 4.90889760144654, 6.695822157259613, 8.703598155573758, 10.917571184935127, 13.325030172231891, 15.914821255975454, 18.677059361184348, 21.602910174600368, 24.684418826876282, 27.914376310242744, 31.28621152152749, 34.793905215657674, 38.43191744996574, 42.1951294374079, 46.07879367327098, 50.07849268195454, 54.190103548359275, 58.40976802057094, 62.7338662873249]
    return bills[i]

def main():
    res = fetch()
    for i in [ 1,2,3]:
        setup = getSetup( i)
        slhafile = setup["slhafile"]
        tpV2 = getTheoryPrediction ( res["CMS-SUS-20-004"], slhafile )
        tpV1 = getTheoryPrediction ( res["CMS-SUS-20-004-slv1"], slhafile )
        xrange = setup["xrange"]
        chi2v2 = computeChi2s( tpV2, xrange )
        chi2v1 = computeChi2s( tpV1, xrange )
        plot ( chi2v2, chi2v1, setup )

if __name__ == "__main__":
    main()
