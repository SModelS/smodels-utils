#Database address
[path]
databasePath = ../../smodels-database ; Give path to the database "text" directory or to the binary database file
smodelsPath  = ../../smodels
utilsPath    = ../../smodels-utils


#Select database analyses
[database]
analysis = ATLAS-SUSY-2018-32 ;Select single analysis for training CMS-SUS-19-006
txNames = TSlepSlep ;Select topologies you want to train, eg: 'T2tt' or 'T2tt,T6WW,..' or 'all'
dataselector = upperLimit ;Select upperLimit or efficiencyMap results
signalRegion = None ;Select SR if dataselector == efficiencyMap


#General dataset options
[dataset]
samplesize = 25000 ;Set number of samples used for training neural networks
massRange = 0,2500 ;Range of r-odd particle masses for sample data
sampleSplit = 0.8,0.1,0.1 ;Set the ratio our sample data will be split into training, testing and validation sets

[options]
device = -1 ;Specify which device to be used for computing, -1: CPU, >=0: GPU. If no CUDA available, this will be skipped and default set to CPU
whichNN = both ;Learn 'regression' (prediction of ULs), 'classification' (shape of convex hull) or 'both'
overwrite = always ;Check wether you want to override an existing NN with new results. Options include: always, never, outperforming


#Hyper-parameters for regression networks
[regression]
optimizer = Adam
lossFunc = MSErel
learnRate = 1e-3 ;1e-3 seems best for MSErel
batchSize = 16
epochs = 100
shape = trap ;Specify shape/architecture of NN (more detailed explanation coming)
activFunc = prel ;Set activation functions used in hidden layers
layer = 4 ;Set # of hidden layers
nodes = 128 ;Set maximum nodes in largest hidden layer
rescaleData = standardScore


#Hyper-parameters for classification networks
[classification]
optimizer = Adam
lossFunc = BCE
learnRate = 1e-3
batchSize = 16
epochs = 80
shape = trap ;Specify shape/architecture of NN (more detailed explanation coming) lin?
activFunc = prel ;Set activation functions used in hidden layers. Options: rel, prel, sel, lrel
layer = 3 ;Set # of hidden layers
nodes = 64 ;Set maximum nodes in largest hidden layer


#Plots and analysis
[analysis]
logFile = true ; create log file of losses and parameters of all models for each topology
lossPlot = true ; create loss plot of final models
runPerformance = false ;run getPerformance.py on final models after search has been completed
